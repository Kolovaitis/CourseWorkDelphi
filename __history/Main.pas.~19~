unit Main;

interface

uses
   System.SysUtils, System.Types, System.UITypes, System.Classes,
   System.Variants,
   FMX.Types, FMX.Controls, FMX.Forms3D, FMX.Types3D, FMX.Forms, FMX.Graphics,
   FMX.Dialogs, System.Math.Vectors, FMX.Controls3D, FMX.Objects3D,
   FMX.MaterialSources, FMX.Media, FMX.Controls.Presentation, FMX.StdCtrls,
   Logic,
   FMX.Ani, MyCardView, FMX.Layers3D, WinForm, FMX.Menus;

type
   TCords = Record
      I: Integer;
      J: Integer;
   End;

   TControlMatrix = array of array of TCardView;

   TFormMain = class(TForm3D)
      Material1: TTextureMaterialSource;
    TextureMaterialSourceBack: TTextureMaterialSource;
      Camera1: TCamera;
      DummyAllCards: TDummy;
      Material2: TTextureMaterialSource;
      Material3: TTextureMaterialSource;
      Material4: TTextureMaterialSource;
      Material5: TTextureMaterialSource;
      Material6: TTextureMaterialSource;
    MaterialShaft: TColorMaterialSource;
    DummyMainScene: TDummy;
    TimerSinglePlayer: TTimer;
    MainMenu1: TMainMenu;
    MenuTime: TMenuItem;
    MenuCount: TMenuItem;
      procedure DummyDblClick(Sender: TObject);
      procedure Form3DShow(Sender: TObject);
    procedure TimerSinglePlayerTimer(Sender: TObject);
   private

      AllCards: TControlMatrix;
      Logic: TLogic;
      Rows, Cols: Integer;
      PlayerCount: Integer;
      TimeSeconds: Integer;
      Count: Integer;
      function GetCords(const Sender: TRectangle3D): TCords;

      procedure FlipTwo(Row1, Column1, Row2, Column2: Integer);
      procedure FlipCard(Row, Column: Integer);
      procedure Win(const Points: Array of Integer);
      procedure RefreshPoints(NewPoints, Player: Integer);
      procedure InitMaterials();
      procedure InitLogic();
      procedure SetScale();
      procedure CountUp();

   public
      Materials: Array of TMaterialSource;
      Constructor Create(AOwner: TComponent; Rows, Columns: Integer; PlayerCount: Integer); overload;
      { Public declarations }
   end;

var
   FormMain: TFormMain;

const
   TimeToSee = 1000;

implementation

{$R *.fmx}
{$R *.Windows.fmx MSWINDOWS}

procedure TFormMain.FlipCard(Row, Column: Integer);
begin
   Self.AllCards[Row, Column].Flip;
end;

procedure TFormMain.FlipTwo(Row1, Column1, Row2, Column2: Integer);
begin

   AllCards[Row1, Column1].FlipAfterSecond(TimeToSee);
   AllCards[Row2, Column2].FlipAfterSecond(TimeToSee);
end;

procedure TFormMain.CountUp;
begin
   Inc(Count);
   MenuCount.Text:='Количество попыток: '+IntToStr(Count);
end;

constructor TFormMain.Create(AOwner: TComponent; Rows, Columns: Integer; PlayerCount:Integer);
begin
   inherited Create(AOwner);
   Self.Cols := Columns;
   Self.Rows := Rows;
   Self.PlayerCount:= PlayerCount;
end;

procedure TFormMain.DummyDblClick(Sender: TObject);
var
   Cords: TCords;
begin
   Cords := GetCords(Sender as TRectangle3D);
   Logic.OnCardTouched(Cords.I, Cords.J);
end;

procedure TFormMain.Form3DShow(Sender: TObject);

begin

   TimeSeconds:=0;
   TimerSinglePlayer.Enabled:=true;

   SetScale;
   InitMaterials;
   InitLogic;
end;

function TFormMain.GetCords(const Sender: TRectangle3D): TCords;
var
   Answer: TCords;
   I, J: Integer;
begin
   for I := 0 to High(AllCards) do
      for J := 0 to High(AllCards) do
      begin
         if (AllCards[I, J] = Sender) then
         begin
            Answer.I := I;
            Answer.J := J;
         end;
      end;
   GetCords := Answer;
end;

procedure TFormMain.InitLogic;
var
   I: Integer;
   J: Integer;
begin
Count:=0;
   SetLength(AllCards, Rows, Cols);
   Logic := TLogic.Create(Rows, Cols, PlayerCount);
   Logic.FlipCard := Self.FlipCard;
   Logic.FlipTwo := Self.FlipTwo;
   Logic.WinScenary := Self.Win;
   Logic.RefreshPoints:= Self.RefreshPoints;
   Logic.CountUp:=Self.CountUp;
   for I := 0 to Rows - 1 do
      for J := 0 to Cols - 1 do
      begin

         AllCards[I, J] := TCardView.CreateCard(DummyAllCards,
           TextureMaterialSourceBack,
           Materials[Logic.Field[I, J].PairNumber],MaterialShaft, I, J);
         AllCards[I, J].OnHasClick := Logic.OnCardTouched;
      end;
end;

procedure TFormMain.InitMaterials;
begin
   SetLength(Materials, 6);
   Materials[0] := Material1;
   Materials[1] := Material2;
   Materials[2] := Material3;
   Materials[3] := Material4;
   Materials[4] := Material5;
   Materials[5] := Material6;
end;

procedure TFormMain.RefreshPoints(NewPoints, Player: Integer);
begin

end;

procedure TFormMain.SetScale;
begin
//DummyAllCards.Position.X:=(-((Cols-1)*TCardView.DeltaX + TCardView.StandartWidth)/5)*Cols;
DummyAllCards.Position.Y:=(-2)*Rows;
Camera1.AngleOfView:=10*(Rows+3);
Camera.Width:= (Cols-1)*TCardView.DeltaX + TCardView.StandartWidth;
Camera.Height := (Rows-1)*TCardView.DeltaY + TCardView.StandartHeight;
end;

procedure TFormMain.TimerSinglePlayerTimer(Sender: TObject);
var
Minutes, Seconds: Integer;
StrMin, StrSec: String;
begin
Inc(TimeSeconds);
Minutes:= TimeSeconds div 60;
Seconds:= TimeSeconds mod 60;
Strmin:=IntToStr(Minutes);
StrSec:=IntToStr(Seconds);
if(Length(StrMin)<2)then
StrMin:='0'+StrMin;
if(Length(StrSec)<2)then
StrSec:='0'+StrSec ;
MenuTime.Text:='Время: '+StrMin+':'+StrSec;
end;

procedure TFormMain.Win(const Points: Array of Integer);
var
WinForm:TFormWin;
begin
   TimerSinglePlayer.Enabled:=false;
   WinForm := TFormWin.Create(Self, Points, Count, TimeSeconds);
   WinForm.ShowModal();
   Self.Close();

end;

end.
