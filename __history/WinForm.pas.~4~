unit WinForm;

interface

uses
   System.SysUtils, System.Types, System.UITypes, System.Classes,
   System.Variants,
   FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs,
   FMX.Controls.Presentation, FMX.StdCtrls, System.Rtti, FMX.Grid.Style,
   FMX.ScrollBox, FMX.Grid, GameRecords;

type
   TFormWin = class(TForm)
      LWin: TLabel;
      LCount: TLabel;
    LGoodResult: TLabel;
      BSave: TButton;
    LTime: TLabel;
    procedure BSaveClick(Sender: TObject);
   private
      var
      TimeSec, TurnCount, ColCount, RowCount:Integer;

   public
      Constructor Create(AOwner: TComponent; const Results: array of Integer;
        Count: Integer; TimeSeconds, ColCount, RowCount: Integer); overload;
        procedure SaveResult();
        procedure PrintTime();
        procedure PrintCount();
        procedure PrintWinner(const Results:array of Integer);
   end;

var
   FormWin: TFormWin;

implementation

{$R *.fmx}
{ TFormWin }

procedure TFormWin.BSaveClick(Sender: TObject);
begin
SaveResult;
BSave.Enabled:=false;
end;

constructor TFormWin.Create(AOwner: TComponent; const Results: array of Integer;
  Count: Integer; TimeSeconds, ColCount, RowCount: Integer);
var
   i: Integer;
   PlayerCol: TColumn;
   PointsCol: TColumn;


begin
   Inherited Create(AOwner);
   Self.ColCount:=ColCount;
   Self.RowCount:=RowCount;
   TimeSec:=TimeSeconds;
   PrintTime;
   if(Length(Results)>1)then
   PrintWinner(Results)
   else
   begin
   TurnCount:=Count;
   PrintCount;
   end;

end;

procedure TFormWin.PrintCount;
begin
LCount.Text := 'Количество ходов: ' + IntToStr(TurnCount) ;
end;

procedure TFormWin.PrintTime;
var
Minutes: Integer;
   Seconds: Integer;
   Strmin: string;
   StrSec: string;
begin
   Minutes := TimeSec div 60;
   Seconds := TimeSec mod 60;
   Strmin := IntToStr(Minutes);
   StrSec := IntToStr(Seconds);
   if (Length(Strmin) < 2) then
      Strmin := '0' + Strmin;
   if (Length(StrSec) < 2) then
      StrSec := '0' + StrSec;
   LTime.Text:= 'Время: ' + Strmin + ':' + StrSec;
end;

procedure TFormWin.PrintWinner(const Results: array of Integer);
var
Winner:Integer;
i, WinPoints: Integer;

begin
LGoodResult.Visible:=false;
BSave.Visible:=false;
Winner:=0;
WinPoints:=Results[Winner];
for i := 1 to High(Results) do
   if(Results[i]>WinPoints)then
   begin
   Winner:=i;
   WinPoints:=Results[Winner];
   end;
LCount.Text:= 'Победил игрок '+IntToStr(Winner+1)+', который набрал '+IntToStr(WinPoints)+' очков';
end;

procedure TFormWin.SaveResult;
var
   ResultValue:TResult;
   Name: String;
begin
   repeat
    Name:= InputBox('Сохранение результата', 'Пожалуйста, укажите своё имя', 'Вася');
  until Name <> '';
  ResultValue.TimeSec:= TimeSec;
  ResultValue.Name:=Name;
  ResultValue.Steps:=TurnCount;
  ResultValue.FieldRows:=RowCount;
  ResultValue.FieldCols:=ColCount;
   if( not TRecordManager.GetInstance.AppendResult(ResultValue))then
   ShowMessage('Произошла ошибка сохранения');
end;

end.
